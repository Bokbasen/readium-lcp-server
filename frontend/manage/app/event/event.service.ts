import { Injectable }       from '@angular/core';
import { Http, Headers }    from '@angular/http';

import 'rxjs/add/operator/toPromise';

import { Event }            from './event';
import { CrudService }      from '../crud/crud.service';

declare var Config: any; //  this comes from the autogenerated config.js file

@Injectable()
export class EventService{
    private masterFileListUrl: string;
    private http:Http;
    private baseUrl: string;
    defaultHttpHeaders = new Headers({'Content-Type': 'application/json'});
    

    constructor (http: Http) {
        this.http = http;
        this.baseUrl = Config.frontend.url;
        this.masterFileListUrl = Config.frontend.url + '/api/v1/repositories/master-files';
    }


    decode(jsonObj: any): Event {
        return {
            publicationCount: jsonObj.publicationCount,
            userCount: jsonObj.userCount,
            buyCount: jsonObj.buyCount,
            loanCount: jsonObj.loanCount,
            averageDuration: jsonObj.averageDuration
        }
    }

    get(): Promise<Event> {
        var self = this
        return this.http
            .get(
                this.baseUrl + "/event",
                { headers: this.defaultHttpHeaders })
            .toPromise()
            .then(function (response) {
                let jsonObj = response.json();
                return self.decode(jsonObj);
            })
            .catch(this.handleError);
    }

    protected handleError(error: any): Promise<any> {
        console.error('An error occurred', error);
        return Promise.reject(error.message || error);
    }
}
