<script src="https://unpkg.com/babel-polyfill@6.2.0/dist/polyfill.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.17.1/moment.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/rome/2.1.22/rome.js"></script>
{{ script "jquery.form-validator.min" }}
{{ script "material-extensions" }}
<style>
    .dialog {
        height: 400px;
        width: 400px;
    }

    .dialogContent {
        height: 380px;
        width: 380px;
    }

    .dialogLayoutContent {
        height: 260px;
        width: 360px;
    }

    .selectedItem:hover {
        color: #60c7cd;
        cursor: pointer;
    }
</style>

<dialog class="mdl-dialog dialog" id="usersDialog">
    <h4 class="mdl-dialog__title">Choose user</h4>
    <div class="mdl-dialog__content dialogContent">
        <div class="mdl-layout mdl-js-layout dialogLayoutContent">
            <div>
                <ul class="mdl-list">
                    {{range $i,$u := .existingUsers}}
                    <li id="{{$u.ID}}" name="{{$u.Email}}" class="mdl-list__item selectedItem">
                        <span class="mdl-list__item-primary-content"><i class="material-icons  mdl-list__item-avatar">perm_identity</i> {{$u.Name}} {{$u.Email}} </span>
                    </li>
                    {{end}}
                </ul>
            </div>
        </div>
    </div>
    <div class="mdl-dialog__actions">
    </div>
</dialog>

<dialog class="mdl-dialog dialog" id="publicationsDialog">
    <h4 class="mdl-dialog__title">Choose publication</h4>
    <div class="mdl-dialog__content dialogContent">
        <div class="mdl-layout mdl-js-layout dialogLayoutContent">
            <div>
                <ul class="mdl-list">
                    {{range $i,$p := .existingPublications}}
                    <li id="{{$p.ID}}" name="{{$p.Title}}" class="mdl-list__item selectedItem">
                        <span class="mdl-list__item-primary-content"><i class="material-icons  mdl-list__item-avatar">label</i> {{$p.Title}} </span>
                    </li>
                    {{end}}
                </ul>
            </div>
        </div>
    </div>
    <div class="mdl-dialog__actions">
    </div>
</dialog>

<div id="toastMessage" class="mdl-js-snackbar mdl-snackbar">
    <div class="mdl-snackbar__text"></div>
    <button class="mdl-snackbar__action" type="button"></button>
</div>

<div class="page-content mdl-card mdl-shadow--2dp">
    <form method="POST" action="/purchases">
        <input type="hidden" name="ID" value="{{.purchase.ID}}">
        <input type="hidden" name="UUID" value="{{.purchase.UUID}}">

        <table style="height: 70vh;width: 100%">
            <tr>
                <td style="text-align: right;">
                    <span>User:</span>
                </td>
                <td>
                    <input type="hidden" id="UserId" name="UserId" {{if defined .purchase.User}}value="{{.purchase.User.ID}}" {{end}}>
                    <input type="text" id="userEmail" {{if defined .purchase.User}}value="{{.purchase.User.Email}}" {{else}}value="Choose user" {{end}}>
                    <button id="usersChooser" type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect">
                        <i class="material-icons">find_in_page</i>
                    </button>
                </td>
            </tr>
            <tr>
                <td style="text-align: right;">
                    <span>Publication:</span>
                </td>
                <td>
                    <input type="hidden" id="PublicationId" name="PublicationId" {{if defined .purchase.Publication}}value="{{.purchase.Publication.ID}}" {{end}}>
                    <input type="text" id="publicationTitle" {{if defined .purchase.Publication}}value="{{.purchase.Publication.Title}}" {{else}}value="Choose publication" {{end}}>
                    <button id="publicationsChooser" type="button" class="mdl-button mdl-js-button mdl-button--raised mdl-button--colored mdl-js-ripple-effect">
                        <i class="material-icons">find_in_page</i>
                    </button>
                </td>
            </tr>
            <tr>
                <td style="text-align: right;">
                    <span> Status : </span>
                </td>
                <td>
                    <div class="mdl-textfield mdl-js-textfield getmdl-select">
                        <input class="mdl-textfield__input" value="{{.purchase.Status}}" id="Status" readonly/>
                        <input value="{{.purchase.Status}}" type="hidden" name="Status"/>
                        <i class="mdl-icon-toggle__label material-icons">keyboard_arrow_down</i>
                        <label class="mdl-textfield__label" for="Status">Status</label>
                        <ul class="mdl-menu mdl-menu--bottom-left mdl-js-menu" for="Status">
                            {{if eq .purchase.Status "Ready"}}
                            <li class="mdl-menu__item" data-val="Ready" data-selected="true">Ready</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Active">Active</li>
                            {{end}}
                            {{if eq .purchase.Status "Active"}}
                            <li class="mdl-menu__item" data-val="Active" data-selected="true">Active</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Active">Active</li>
                            {{end}}
                            {{if eq .purchase.Status "Revoked"}}
                            <li class="mdl-menu__item" data-val="Revoked" data-selected="true">Revoked</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Revoked">Revoked</li>
                            {{end}}
                            {{if eq .purchase.Status "Returned"}}
                            <li class="mdl-menu__item" data-val="Returned" data-selected="true">Returned</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Returned">Returned</li>
                            {{end}}
                            {{if eq .purchase.Status "Cancelled"}}
                            <li class="mdl-menu__item" data-val="Cancelled" data-selected="true">Cancelled</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Cancelled">Cancelled</li>
                            {{end}}
                            {{if eq .purchase.Status "Expired"}}
                            <li class="mdl-menu__item" data-val="Expired" data-selected="true">Expired</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Expired">Expired</li>
                            {{end}}
                            {{if eq .purchase.Status "Renewed"}}
                            <li class="mdl-menu__item" data-val="Renewed" data-selected="true">Renewed</li>
                            {{else}}
                            <li class="mdl-menu__item" data-val="Renewed">Renewed</li>
                            {{end}}
                        </ul>
                    </div>
                </td>
            </tr>
            <tr>
                <td style="text-align:right;">
                    <span> Type : </span>
                </td>
                <td>
                    <label class="mdl-switch mdl-js-switch mdl-js-ripple-effect" for="switch-input">
                        <input type="checkbox" id="switch-input" class="mdl-switch__input" {{if eq .purchase.Type "Loan"}}checked{{end}}>
                        <input type="hidden" id="Type" name="Type" value="{{.purchase.Type}}">
                        <span id="switch-label" class="mdl-switch__label">{{.purchase.Type}}</span>
                    </label>
                </td>
            </tr>
            <tr id="startDateRow">
                <td style="text-align: right;">
                    <span> StartDate : </span>
                </td>
                <td>
                    <div class="mdl-textfield mdl-js-textfield">
                        <input class="mdl-textfield__input c-start-date" type="text" id="StartDate" name="StartDate" readonly>
                        <label class="mdl-textfield__label" for="StartDate">Start Date...</label>
                    </div>
                </td>
            </tr>
            <tr id="endDateRow">
                <td style="text-align: right;">
                    <span> EndDate : </span>
                </td>
                <td>
                    <div class="mdl-textfield mdl-js-textfield">
                        <input class="mdl-textfield__input c-end-date" type="text" id="EndDate" name="EndDate" readonly>
                        <label class="mdl-textfield__label" for="EndDate">End Date...</label>
                    </div>
                </td>
            </tr>
        </table>
        <div class="mdl-paging mdl-data-tabledynamic__actions">
            <button id="saveButton" class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect" type="submit">Save</button>
            <button class="mdl-button mdl-button--colored mdl-js-button mdl-js-ripple-effect cancel" type="reset">Cancel</button>
        </div>
    </form>
</div>

<script type="text/javascript">
    (function ($) {
        $(function () {
            $.validate({});

            var currentPicking = "";
            var buyLoadSwitch = document.getElementById("switch-label");
            var buyLoadHidden = document.getElementById("Type");
            var startDdateChooser = document.querySelector('.c-start-date');
            var endDateChooser = document.querySelector('.c-end-date');
            var publicationsDialog = document.getElementById('publicationsDialog');
            var usersDialog = document.getElementById('usersDialog');
            var notificator = document.querySelector('#toastMessage');
            var saveButton = document.getElementById('saveButton');
            var startDateEl = document.getElementById("StartDate");
            var endDateEl = document.getElementById("EndDate");
            var checkLoanAndSetStart = function () {
                if (buyLoadHidden.value == "Loan") {
                    if (startDateEl.value == "") {
                        startDateEl.value = moment().utc().startOf('day').format();
                    }
                }
            };

            checkLoanAndSetStart();

            saveButton.addEventListener("click", function (event) {
                var errorMessage = "";
                if (document.getElementById("PublicationId").value == 0) {
                    errorMessage = "Choose a publication.";
                }
                if (document.getElementById("UserId").value == 0) {
                    errorMessage = "Choose an user.";
                }
                if (document.getElementById("Status").value == "") {
                    errorMessage = "Choose a status";
                }
                if (buyLoadHidden.value == "Loan") {
                    // checking start date before end date
                    if (moment(endDateEl.value).isBefore(moment(startDateEl.value))) {
                        errorMessage = "Start date must be before end date.";
                    }
                } else {
                    // cleaning up start and end - it's a buy
                    startDateEl.value = "";
                    endDateEl.value = "";
                }

                if (errorMessage != "") {
                    notificator.MaterialSnackbar.showSnackbar({
                        message: "Error : " + errorMessage,
                        timeout: 2000,
                        actionHandler: function (event) {
                        },
                        actionText: 'Ok'
                    });
                    // And we prevent the form from being sent by canceling the event
                    event.preventDefault();
                }
            }, false);

            var picker = new MaterialDatetimePicker({})
                .on('submit', function (dat) {
                    hasOpenedPicker = false;
                    switch (currentPicking) {
                        case "start":
                            startDateEl.value = dat.utc().startOf('day').format();
                            currentPicking = "";
                            break;
                        case "end":
                            endDateEl.value = dat.utc().startOf('day').format();
                            currentPicking = "";
                            break;
                        default:
                            console.log("Submitted unknown", dat.format());
                            currentPicking = "";
                    }
                });

            picker.on('close', function () {
                currentPicking == "";
            });

            startDdateChooser.addEventListener('click', function () {
                if (currentPicking != "") {
                    return;
                }
                if (buyLoadHidden.value == "Loan") {
                    picker.open();
                    currentPicking = "start";
                }
            }, false);

            endDateChooser.addEventListener('click', function () {
                if (currentPicking != "") {
                    return;
                }
                if (buyLoadHidden.value == "Loan") {
                    picker.open();
                    currentPicking = "end";
                }
            }, false);


            document.getElementById("switch-input").onclick = function () {
                if (buyLoadSwitch.textContent == "Loan") {
                    buyLoadHidden.value = buyLoadSwitch.textContent = "Buy";
                    $("#startDateRow").css("visibility", "hidden");
                    $("#endDateRow").css("visibility", "hidden");
                } else {
                    buyLoadHidden.value = buyLoadSwitch.textContent = "Loan";
                    checkLoanAndSetStart();
                    $("#startDateRow").css("visibility", "visible");
                    $("#endDateRow").css("visibility", "visible");
                }
            };

            document.getElementById("usersChooser").onclick = function () {
                if (currentPicking != "") {
                    picker.close();
                    currentPicking = "";
                }
                usersDialog.showModal();
                $(document).on("click", "li.selectedItem", function () {
                    var chosen = $(this)[0];
                    document.getElementById("UserId").value = chosen.getAttribute("id");
                    document.getElementById("userEmail").value = chosen.getAttribute("name");
                    usersDialog.close();
                    $(document).off("click", "li.selectedItem");
                });
            };
            usersDialog.addEventListener('click', function (event) {
                // check if clicked outside
                var rect = usersDialog.getBoundingClientRect();
                var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width);
                if (!isInDialog) {
                    usersDialog.close();
                    $(document).off("click", "li.selectedItem");
                }
                // end check outside
            });

            document.getElementById("publicationsChooser").onclick = function () {
                if (currentPicking != "") {
                    picker.close();
                    currentPicking = "";
                }
                publicationsDialog.showModal();
                $(document).on("click", "li.selectedItem", function () {
                    var chosen = $(this)[0];
                    document.getElementById("PublicationId").value = chosen.getAttribute("id");
                    document.getElementById("publicationTitle").value = chosen.getAttribute("name");
                    publicationsDialog.close();
                    $(document).off("click", "li.selectedItem");
                });
            };
            publicationsDialog.addEventListener('click', function (event) {
                // check if clicked outside
                var rect = publicationsDialog.getBoundingClientRect();
                var isInDialog = (rect.top <= event.clientY && event.clientY <= rect.top + rect.height && rect.left <= event.clientX && event.clientX <= rect.left + rect.width);
                if (!isInDialog) {
                    publicationsDialog.close();
                    $(document).off("click", "li.selectedItem");
                }
                // end check outside
            });


            $(".cancel").on("click", function () {
                window.location.href = "/purchases";
            });
        }); // end of document ready
    })(jQuery); // end of jQuery name space
</script>